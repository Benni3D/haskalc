.TH haskalc 1 "2021-10-01" "Benjamin Stürz"

.SH NAME
haskalc - a calculator written in the Haskell programming language

.SH SYNOPSIS
.SY haskalc
.YS

.SH DESCRIPTION
.I haskalc
is a simple calculator written in the Haskell programming language.

.SH USAGE
The calculator currently supports
.I integers
and
.I floating-point numbers
and these basic \fIoperators\fR:
.PP
.RS 5
+ (addition)
.RE
.RS 5
- (subtraction)
.RE
.RS 5
* (multiplication)
.RE
.RS 5
/ (division)
.RE
.RS 5
% (modulo)
.RE
.RS 5
^ (exponentiation)
.RE
.RS 5
= (assignment)
.RE
.RS 8
Usage:
.RE
.RS 10
x = 10 (variable)
.RE
.RS 10
f(x) = 2 * x (function)
.RE
.PP
To exit the calculator write
.I exit
or send an EOF-character with
.I Ctrl+D\fR.

.SH BUILT-IN FUNCTIONS
.B sin\fR(\fIx\fR)
\      - compute the sine of
.I x
.RE
.B cos\fR(\fIx\fR)
\      - compute the cosine of
.I x
.RE
.B tan\fR(\fIx\fR)
\      - compute the tangent of
.I x
.RE
.B asin\fR(\fIx\fR)
\     - compute the arc sine of
.I x
.RE
.B acos\fR(\fIx\fR)
\     - compute the arc cosine of
.I x
.RE
.B atan\fR(\fIx\fR)
\     - compute the arc tangent of
.I x
.RE
.B sinh\fR(\fIx\fR)
\     - compute the hyperbolic sine of
.I x
.RE
.B cosh\fR(\fIx\fR)
\     - compute the hyperbolic cosine of
.I x
.RE
.B tanh\fR(\fIx\fR)
\     - compute the hyperbolic tangent of
.I x
.RE
.B asinh\fR(\fIx\fR)
\    - compute the area hyperbolic sine of
.I x
.RE
.B acosh\fR(\fIx\fR)
\    - compute the area hyperbolic cosine of
.I x
.RE
.B atanh\fR(\fIx\fR)
\    - compute the area hyperbolic tangent of
.I x
.RE
.B sqrt\fR(\fIx\fR)
\     - compute the square root of
.I x
.RE
.B log\fR(\fIx\fR)
\      - compute the natural logarithm of
.I x
.RE
.B log10\fR(\fIx\fR)
\    - compute the common (base-10) logarithm of
.I x
.RE
.B log2\fR(\fIx\fR)
\     - compute the binary (base-2) logarithm of
.I x
.RE
.B ceil\fR(\fIx\fR)
\     - round
.I x
towards positive infinity
.RE
.B floor\fR(\fIx\fR)
\    - round
.I x
twoards negative infinity
.RE
.B truncate\fR(\fIx\fR)
\ - round
.I x
towards 0
.RE
.B round\fR(\fIx\fR)
\    - round
.I x
to the nearest integer value
.RE
.B gcd\fR(\fIx\fR, \fIy\fR)
\   - compute the greatest common divisor of
.I x
and
.I y
.RE
.B lcm\fR(\fIx\fR, \fIy\fR)
\   - compute the least common multiple of
.I x
and
.I y

.SH BUILT-IN VARIABLES
.B true
\        - boolean value of true.
.RE
.B false
\       - boolean value of false.
.RE
.B pi
\          - the constant pi.

.PP
.SH COPYRIGHT
.br
Copyright \(co 2021 Benjamin Stürz
.br
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
.br
This is free software; you are free to change and redistribute it.
.br
There is NO WARRANTY, to the extent permitted by law.
